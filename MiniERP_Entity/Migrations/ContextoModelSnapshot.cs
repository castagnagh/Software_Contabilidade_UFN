// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MiniERP_Entity;

#nullable disable

namespace MiniERP_Entity.Migrations
{
    [DbContext(typeof(Contexto))]
    partial class ContextoModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.25")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("MiniERP_Entity.DataModels.Cliente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Cpf")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Clientes");
                });

            modelBuilder.Entity("MiniERP_Entity.DataModels.ClienteProduto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("NotaId")
                        .HasColumnType("int");

                    b.Property<decimal>("PrecoTotal")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("PrecoUnitario")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("ProdutoId")
                        .HasColumnType("int");

                    b.Property<int>("QtdTotal")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("NotaId");

                    b.HasIndex("ProdutoId");

                    b.ToTable("ClientesProdutos");
                });

            modelBuilder.Entity("MiniERP_Entity.DataModels.Fornecedor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Cnpj")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RazaoSocial")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Fornecedores");
                });

            modelBuilder.Entity("MiniERP_Entity.DataModels.Nota", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("ClienteId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Data")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<decimal>("PrecoTotalCompra")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("ClienteId");

                    b.ToTable("Notas");
                });

            modelBuilder.Entity("MiniERP_Entity.DataModels.Produto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("FornecedorId")
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Preco")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("PrecoTotal")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("PrecoVenda")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("QtdEstoque")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FornecedorId");

                    b.ToTable("Produtos");
                });

            modelBuilder.Entity("MiniERP_Entity.DataModels.Relatorio", b =>
                {
                    b.Property<int>("RelatorioId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RelatorioId"), 1L, 1);

                    b.Property<decimal?>("Caixa")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("CapitalInicial")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("ComprasProdutos")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("ImpostoPagar")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("ImpostoRecuperar")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("Patrimonio")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("VendasProdutos")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("RelatorioId");

                    b.ToTable("Relatorios");
                });

            modelBuilder.Entity("MiniERP_Entity.DataModels.ClienteProduto", b =>
                {
                    b.HasOne("MiniERP_Entity.DataModels.Nota", "Nota")
                        .WithMany("clienteProdutos")
                        .HasForeignKey("NotaId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("MiniERP_Entity.DataModels.Produto", "Produto")
                        .WithMany()
                        .HasForeignKey("ProdutoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Nota");

                    b.Navigation("Produto");
                });

            modelBuilder.Entity("MiniERP_Entity.DataModels.Nota", b =>
                {
                    b.HasOne("MiniERP_Entity.DataModels.Cliente", "Cliente")
                        .WithMany("Notas")
                        .HasForeignKey("ClienteId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Cliente");
                });

            modelBuilder.Entity("MiniERP_Entity.DataModels.Produto", b =>
                {
                    b.HasOne("MiniERP_Entity.DataModels.Fornecedor", "Fornecedor")
                        .WithMany("Produtos")
                        .HasForeignKey("FornecedorId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Fornecedor");
                });

            modelBuilder.Entity("MiniERP_Entity.DataModels.Cliente", b =>
                {
                    b.Navigation("Notas");
                });

            modelBuilder.Entity("MiniERP_Entity.DataModels.Fornecedor", b =>
                {
                    b.Navigation("Produtos");
                });

            modelBuilder.Entity("MiniERP_Entity.DataModels.Nota", b =>
                {
                    b.Navigation("clienteProdutos");
                });
#pragma warning restore 612, 618
        }
    }
}
